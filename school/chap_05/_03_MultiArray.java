package chap_05;

public class _03_MultiArray {

	public static void main(String[] args) {
		// 다차원 배열 (2차원 배열)
		
		// 소규모 영화관 좌석
		// A1 ~ A5
		// B1 ~ B5
		// C1 ~ C5
		
		// 2차원 배열을 사용하지 않음 (1차원 배열)
		String[] seatA = {"A1", "A2", "A3", "A4", "A5"};
		String[] seatB = {"B1", "B2", "B3", "B4", "B5"};
		String[] seatC = {"C1", "C2", "C3", "C4", "C5"};
		// 이 작업을 2차원 배열로 한 번에 만들 수 있음 
		
		String[][] seats = new String[][] // 대괄호 [] 2개로 선언
		{	
			// 2차원 배열에서는 행이 우선이고, 각각의 행마다 몇개의 인덱스가 있는지 할당함
			{"A1", "A2", "A3", "A4", "A5"}, // 1번째 행 (0번 인덱스값)
			// 열의 인덱스 값 -> [0][0], [0][1], [0][2], [0][3], [0][4]
			
			{"B1", "B2", "B3", "B4", "B5"}, // 2번째 행 (1번 인덱스값)
			// 열의 인덱스 값 -> [1][0], [1][1], [1][2], [1][3], [1][4]
			
			{"C1", "C2", "C3", "C4", "C5"}  // 3번째 행 (2번 인덱스값)
			// 열의 인덱스 값 -> [2][0], [2][1], [2][2], [2][3], [2][4]
			
		};
		// B2 값에 접근
		System.out.println(seats[1][1]);
		// C5 값에 접근
		System.out.println(seats[2][4]);
		
		String[][] seats2 = new String[][] // 대괄호 [] 2개로 선언
		{	
			// 각각의 행은 배열의 길이가 다를 수 있음
			{"A1", "A2", "A3"},
			// 인덱스 값 -> 1-0, 1-1, 1-2
			{"B1", "B2", "B3", "B4"}, 
			// 인덱스 값 -> 2-0, 2-1, 2-2, 2-3
			{"C1", "C2", "C3", "C4", "C5"}
			// 인덱스 값 -> 3-0, 3-1, 3-2, 3-3, 3-4
		};
				
		// System.out.println(seat2[0][4]); 
		// seats에서는 A4이지만 seats2에서는 값이 없는 상태이기 때문에 오류가 뜸
		
		// 3차원 배열을 만드는 법
		String[][][] marray = new String[3][3][3];
	}
}
